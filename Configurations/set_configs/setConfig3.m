function[CONFIG]=setConfig3(CONFIG)

% congfigID
CONFIG.configID = 3;

% use measurement generated by config XXX
CONFIG.measConfigID = 500;

% measurement generation network
CONFIG.measNetworkID = 'CA-link-1';

% model calibration network
CONFIG.caliNetworkID = 'CA-link-XXX';

% parameters
CONFIG.parameterID = 3;

% initial state
CONFIG.initialStateID = 'INITIAL_STATE_CONFIG-3';

% boundary condition
CONFIG.boundaryConditionID = 'BOUNDARY_CONDITION_CONFIG-3';

% junction solver
CONFIG.junctionSolverType = 'multi-lane model';

% running mode
CONFIG.measurement_generation_mode = 'on';
CONFIG.estimation_mode = 'off';
CONFIG.particle = 'off';
CONFIG.ABC = 'off';
CONFIG.ABCrejection = 'off';
CONFIG.ABCSMC = 'off';

% data folder (this is the data generated by config xx)
CONFIG.sensorDataFolder = 500;

% save generated testing(sensor) data to the following folder
% check if the data folder already exist, if not just make the directory
if (exist (['Result\testingData\config-' num2str(CONFIG.configID)], 'dir') ~= 7)
    mkdir (['Result\testingData\config-' num2str(CONFIG.configID)]);
end
CONFIG.testingDataFolder = (['Result\testingData\config-' num2str(CONFIG.configID) '\']);

% save density evolution related info. to the following folder (LINK,
% LINK_WITH_SENSOR)
if (exist (['Result\evolutionData\config-' num2str(CONFIG.configID)], 'dir') ~= 7)
    mkdir (['Result\evolutionData\config-' num2str(CONFIG.configID)]);
end
CONFIG.evolutionDataFolder = (['Result\evolutionData\config-' num2str(CONFIG.configID) '\']);